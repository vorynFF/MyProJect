{
  "uid" : "9e8ce8aca498c841",
  "name" : "test_givingGiftsV2",
  "fullName" : "testcases.test_im.test_gift.TestGift#test_givingGiftsV2",
  "historyId" : "2333aacbe3242c98dfb8287b52e72982",
  "time" : {
    "start" : 1676703744872,
    "stop" : 1676703763249,
    "duration" : 18377
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 3684 == (3684 + 3)\n +  where 3684 = int('3684')\n +  and   3684 = int(3684)",
  "statusTrace" : "self = <test_gift.TestGift object at 0x7fbf6a32c820>\nlogin_whb = {'caller': 'app', 'content-type': 'application/json', 'encrypt': 'md5', 'etag': 'qqq', ...}\n\n    def test_givingGiftsV2(self, login_whb):\n        header = login_whb\n        url = frog[\"host\"] + yml['givingGiftsV2Api']\n        logger.info(\"=========批量IM赠送免费礼物逻辑测试=========\")\n    \n        gift_im_data = {\n            \"giftId\": 33,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"\",\n            \"giftSize\": 3\n        }\n        gift_im_res = frog_req.post(url, json=gift_im_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_im_res))\n        assert gift_im_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n        assert gift_im_res['body']['data']['giftSize'] == '0'\n    \n        logger.info(\"=========批量赠送视频免费礼物逻辑测试=========\")\n        gift_video_data = {\n            \"giftId\": 33,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"80737412\",\n            \"giftSize\": 3\n        }\n    \n        gift_video_res = frog_req.post(url, json=gift_video_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_video_res))\n    \n        # 获取该user_id送该视频id礼物的总数\n        give_video_gift_count_sql = \"select \" \\\n                                    \"   count(*) \" \\\n                                    \"from \" \\\n                                    \"   gift_rec_info \" \\\n                                    \"where \" \\\n                                    \"   1=1 \" \\\n                                    \"and \" \\\n                                    \"   user_id = {} \" \\\n                                    \"and \" \\\n                                    \"   friend_user_id = {} \" \\\n                                    \"and \" \\\n                                    \"   video_id = {} \".format(header['userId'], gift_video_data['friendUserId'],\n                                                               gift_video_data['videoId'])\n        give_gift_count = con.select(give_video_gift_count_sql)\n        assert gift_video_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n        assert int(gift_video_res['body']['data']['giftSize']) == int(give_gift_count[0][0])\n    \n        # 获取该user_id下对应的游泳圈数量\n        get_balance_sum_sql = \"select \" \\\n                              \"     *\" \\\n                              \" from  \" \\\n                              \"     user_gold_account  \" \\\n                              \"where user_id = {} \" \\\n                              \"ORDER BY \" \\\n                              \"     create_time desc;\".format(header['userId'])\n        balance_sum = con.select(get_balance_sum_sql)\n        logger.info(\"=========判断该用户下的游泳圈数量是否大于0=========\")\n        assert int(balance_sum[0][1]) > 0\n    \n        logger.info(\"=========批量IM赠送付费礼物逻辑测试=========\")\n        pay_gift_im_data = {\n            \"giftId\": 36,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"\",\n            \"giftSize\": 3\n        }\n        pay_gift_im_res = frog_req.post(url, json=pay_gift_im_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_im_res))\n        assert pay_gift_im_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n        assert pay_gift_im_res['body']['data']['giftSize'] == '0'\n    \n        logger.info(\"=========批量视频赠送付费礼物逻辑测试=========\")\n        pay_gift_video_data = {\n            \"giftId\": 36,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"80737412\",\n            \"giftSize\": 3\n        }\n    \n        pay_gift_video_res = frog_req.post(url, json=pay_gift_video_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_im_res))\n        assert pay_gift_video_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n>       assert int(pay_gift_video_res['body']['data']['giftSize']) == \\\n               int(give_gift_count[0][0]) + pay_gift_video_data['giftSize']\nE       AssertionError: assert 3684 == (3684 + 3)\nE        +  where 3684 = int('3684')\nE        +  and   3684 = int(3684)\n\ntestcases/test_im/test_gift.py:121: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1676703614227,
      "stop" : 1676703614342,
      "duration" : 115
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "login_whb",
    "time" : {
      "start" : 1676703739234,
      "stop" : 1676703742262,
      "duration" : 3028
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 3684 == (3684 + 3)\n +  where 3684 = int('3684')\n +  and   3684 = int(3684)",
    "statusTrace" : "self = <test_gift.TestGift object at 0x7fbf6a32c820>\nlogin_whb = {'caller': 'app', 'content-type': 'application/json', 'encrypt': 'md5', 'etag': 'qqq', ...}\n\n    def test_givingGiftsV2(self, login_whb):\n        header = login_whb\n        url = frog[\"host\"] + yml['givingGiftsV2Api']\n        logger.info(\"=========批量IM赠送免费礼物逻辑测试=========\")\n    \n        gift_im_data = {\n            \"giftId\": 33,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"\",\n            \"giftSize\": 3\n        }\n        gift_im_res = frog_req.post(url, json=gift_im_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_im_res))\n        assert gift_im_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n        assert gift_im_res['body']['data']['giftSize'] == '0'\n    \n        logger.info(\"=========批量赠送视频免费礼物逻辑测试=========\")\n        gift_video_data = {\n            \"giftId\": 33,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"80737412\",\n            \"giftSize\": 3\n        }\n    \n        gift_video_res = frog_req.post(url, json=gift_video_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_video_res))\n    \n        # 获取该user_id送该视频id礼物的总数\n        give_video_gift_count_sql = \"select \" \\\n                                    \"   count(*) \" \\\n                                    \"from \" \\\n                                    \"   gift_rec_info \" \\\n                                    \"where \" \\\n                                    \"   1=1 \" \\\n                                    \"and \" \\\n                                    \"   user_id = {} \" \\\n                                    \"and \" \\\n                                    \"   friend_user_id = {} \" \\\n                                    \"and \" \\\n                                    \"   video_id = {} \".format(header['userId'], gift_video_data['friendUserId'],\n                                                               gift_video_data['videoId'])\n        give_gift_count = con.select(give_video_gift_count_sql)\n        assert gift_video_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n        assert int(gift_video_res['body']['data']['giftSize']) == int(give_gift_count[0][0])\n    \n        # 获取该user_id下对应的游泳圈数量\n        get_balance_sum_sql = \"select \" \\\n                              \"     *\" \\\n                              \" from  \" \\\n                              \"     user_gold_account  \" \\\n                              \"where user_id = {} \" \\\n                              \"ORDER BY \" \\\n                              \"     create_time desc;\".format(header['userId'])\n        balance_sum = con.select(get_balance_sum_sql)\n        logger.info(\"=========判断该用户下的游泳圈数量是否大于0=========\")\n        assert int(balance_sum[0][1]) > 0\n    \n        logger.info(\"=========批量IM赠送付费礼物逻辑测试=========\")\n        pay_gift_im_data = {\n            \"giftId\": 36,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"\",\n            \"giftSize\": 3\n        }\n        pay_gift_im_res = frog_req.post(url, json=pay_gift_im_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_im_res))\n        assert pay_gift_im_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n        assert pay_gift_im_res['body']['data']['giftSize'] == '0'\n    \n        logger.info(\"=========批量视频赠送付费礼物逻辑测试=========\")\n        pay_gift_video_data = {\n            \"giftId\": 36,\n            \"friendUserId\": \"86724026\",\n            \"videoId\": \"80737412\",\n            \"giftSize\": 3\n        }\n    \n        pay_gift_video_res = frog_req.post(url, json=pay_gift_video_data, headers=login_whb)\n        logger.info(\"givingGiftsV2:{}\".format(gift_im_res))\n        assert pay_gift_video_res['body']['state']['msg'] == 'Operation succeeded;Operation succeeded'\n>       assert int(pay_gift_video_res['body']['data']['giftSize']) == \\\n               int(give_gift_count[0][0]) + pay_gift_video_data['giftSize']\nE       AssertionError: assert 3684 == (3684 + 3)\nE        +  where 3684 = int('3684')\nE        +  and   3684 = int(3684)\n\ntestcases/test_im/test_gift.py:121: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "523fb6a5735ff962",
      "name" : "log",
      "source" : "523fb6a5735ff962.txt",
      "type" : "text/plain",
      "size" : 12106
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcases.test_im"
  }, {
    "name" : "suite",
    "value" : "test_gift"
  }, {
    "name" : "subSuite",
    "value" : "TestGift"
  }, {
    "name" : "host",
    "value" : "voryndeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "34442-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_im.test_gift"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "68a52fbd34878d31",
        "reportUrl" : "http://localhost:8080/job/aaa/16/allure/#testresult/68a52fbd34878d31",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 3681 == (3681 + 3)\n +  where 3681 = int('3681')\n +  and   3681 = int(3681)",
        "time" : {
          "start" : 1676702619161,
          "stop" : 1676702632850,
          "duration" : 13689
        }
      }, {
        "uid" : "d246e1c09d28eed9",
        "reportUrl" : "http://localhost:8080/job/aaa/15/allure/#testresult/d246e1c09d28eed9",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 3678 == (3678 + 3)\n +  where 3678 = int('3678')\n +  and   3678 = int(3678)",
        "time" : {
          "start" : 1676701601407,
          "stop" : 1676701614954,
          "duration" : 13547
        }
      }, {
        "uid" : "72be4666e95a446",
        "reportUrl" : "http://localhost:8080/job/aaa/14/allure/#testresult/72be4666e95a446",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 3675 == (3675 + 3)\n +  where 3675 = int('3675')\n +  and   3675 = int(3675)",
        "time" : {
          "start" : 1676700903212,
          "stop" : 1676700916847,
          "duration" : 13635
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9e8ce8aca498c841.json",
  "parameterValues" : [ ]
}